@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
// @import "fonts/fonts";
:root {
	--font-family: "Inter", sans-serif;
	--second-family: "Playfair Display", sans-serif;
}

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: var(--font-family);
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию

// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1700;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 225;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$laptopLarge: em(1440.98);
$laptop: em(1279.98);
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileMiddle: em(578.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}

	// Сайт загружен
	.loaded & {}
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	background-color: #E7EFF0;

	@supports (overflow: clip) {
		overflow: clip;
	}

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($containerWidth);
			margin: 0 auto;
		}

		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));

				@media (max-width:$pc) {
					@include adaptiveValue("padding-left", math.div($containerPadding, 2), 40, 0, 1920, 1280);
					@include adaptiveValue("padding-right", math.div($containerPadding, 2), 40, 0, 1920, 1280);
				}

				@media (max-width:$laptop) {
					@include adaptiveValue("padding-left", 40, 24, 0, 1280, 768);
					@include adaptiveValue("padding-right", 40, 24, 0, 1280, 768);
				}

				@media (max-width:$mobile) {
					padding-left: rem(15);
					padding-right: rem(15);
				}
			}

			@else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer>0) {
			max-width: rem($containerWidth);
		}

		@else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $tablet) {
			max-width: rem(750);
		}

		@media (max-width: $mobile) {
			max-width: none;

			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";
@import "libs/bootstrap.scss";
@import "libs/bootstrap-select.scss";

// Подключение стилей отдельных страниц
// @import "home";
// @import "about";
// @import "certificate";
// @import "news";
// @import "materials";
// @import "4a-bio";
// @import "products";
// @import "contacts";
// @import "air";
// @import "oil";
// @import "cabin";
// @import "transmission";
// @import "fuel";
@import "catalog";